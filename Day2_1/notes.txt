Arrays : 
________

An array is the finite ordered set of homogeneous elements, means all the elements belongs to same data type. 

All the elements of array are stored in successive memory locations. 

You can declare elements in array as

int[] a = new int[]{5,2,66,323};

a[0]=5;
a[1]=2;
a[2]=66;
a[3]=323;

int[] a = new int[] {45,23,55,32,10};
//		for(int i=0;i<a.length;i++) {
//			System.out.println(a[i]);
//		}
		for (int i : a) {
			System.out.println(i);
		}


internal implementation of foreach loop : 

in above loop at first i points to the first element in Array a, after processing first element it checks next element is there or not by using hasMoreElements(), if hasMoreElements() returns true, it moves to the next element by using nextElement(). It repeats as soon as hasMoreElements() returnd true. 

There are 2 types of memories as STACK and HEAP

values types will be stored in STACK memory, and reference types will be stored in HEAP memory. 

enums allows you to store group of constant values. 


Enum : Used to store some group of constant values. 

Which provides security to values, as except group of constant
values i am not supposed to enter any other value, then 
we need the help of enum. 

void show(int x) {
...
...
...
}

show(12.5);
show(12);
show("Hello");

void show(Object x) {
...
...
...
}


Object can allow any values, but we cannot perform any operations w.r.t. 
data types, so overcome this we need the help of boxing and unboxing. 

The concept of converting value types to reference types known as boxing, and 
reference types to value types known as unboxing. 

Object is type, that which can be used for boxing and unboxing. 


-> What is the default package in java 

	java.lang

-> What is the top level class in java 

	Object is the top level class

java.lang.Object 

	Object class having following methods as

		toString() : Contains the string representation, this method will be called automatically once you print the object. 

		equals()

		getClass()

		hashCode()

Method Overloading : 

The concept of using the same method name w.r.t. Different data types or different parameters known as method overloading. In this, the method name must be same. 

This is an example for compile time polymorphism, because data binding will happen at compile time. 

class Test {
   int a,b;
   a=5;
   b=7;
}

constructors : A constructor is a special member which used to initialize the member variables of the class, it is special because it has the same name as that of class name. 

Rules : 
________

	-> It will not contains any return type

	-> It will not return any value

	-> It will be invoked automatically once the instance of the class created

	-> A constructor can be overloaded. 

What are the types of constructors :
_____________________________________

There are 2 types of constructors known as 

	-> static constructor : These are called class constructors, which are 
		used to initialize the static variables of the class, these 
		constructors are invoked automatically before control reaches the
		entry point, these constructors cannot be overloaded. 

	*** In java, we don't have any static constructor, as static block acts as
		static constructor ***

	static {
	  ...
	  ...
	  ...
	}
	
	-> instance constructor : these are the constructors, that which are invoked automatically once the instance of the class created.  These constructors can be overloaded.

static methods : These are the methods, that which are to be called by using class name. No object required to call these methods. 

static variables : These are the variables, that 
which retains values irrespective of type of object. 

Inheritance : The concept of deriving a new class from already existing
class known as inheritance, the class which derived known as derived class, the class from which its derived known as base class.  Through inheritance, we can reduce the size of the program. 

class First {
...
...
...
}

class Second extends First {
...
...
...
}

Once you create an object to Second class, then you can access all public/protected and friendly members. 









	

