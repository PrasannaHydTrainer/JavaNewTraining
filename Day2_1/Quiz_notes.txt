class Quiz1 {
   public static void main(String[] args) {
       System.out.println("5" +3+8); // 538
       System.out.println("5" + (3+8)); // 511
       System.out.println("5+3"+8); // 5+38
  }
}


_________________________________________________

int[] a = new int[]{12,4,6,33,23};
for(int i : a) {
System.out.println(a);
}

_______________________________________________________________________

public class Ex3 {

public static void main(String[] args) {
       String month;
month = "Feb";
switch(month) {
case "Feb" : System.out.println("Hi");
case "Mar" : System.out.println("Hello");
case "Apr" : System.out.println("Bye");
case "May" : System.out.println("Test");
default :
System.out.println("Default");
       }
    }
}


for loop will go with index as

int[] a=new int[]{4,3,33,64,32};

for(int i=0;i<a.length;i++) {
   System.out.println(a[i]);
}
-- a[0], a[1], a[2], a[3] ....

for(int i : a) {
  System.out.println(i);
}

it print by element as no element then it comes out of the loop

4, 3, 33, 64, 32 if no element end the loop.



______________________________________________

class Demo {
   public static void main(String[] args) {
      int x;
      System.out.println("X value is " +x);
   }
}

-- compile time error as use of unassigned value

__________________________________________________

class Demo {
    public void show(double x) {
 	System.out.println("Double  " +x);
    }
    public void show(Object x) {
	System.out.println("Object  " +x);
    }

    public static void main(String[] args) {
        new Demo().show(12);
    }
}

__________________________________________________


class First {
   public void show() {
     System.out.println("Hi");
   }
}

class Second extends First {
    public static void show() {
	System.out.println("Bye");
    }
}

class Demo {
   public static void main(String[] args) {
      new Second().show();
   }
}

-- Compile time error, as Base class methods cannot be
redfined as static in derived class. 

_____________________________________________________________

class Test {
    public void show(Object ob) {
	if (ob=="ABC") {
	   System.out.println("Correct");
        } else {
	   System.out.println("Wrong");
        }
    }

    public static void main(String[] args) {
        Test obj = new Test();
       // String str="ABC";
        obj.show("ABC");
    }
}


// Output is Correct as Object and String are both reference 
types as unboxing not required here. 






